% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NestRRR.r
\name{NestRRR}
\alias{NestRRR}
\title{Obtain NRRR estimator with given rank}
\usage{
NestRRR(
  Y,
  X,
  Ag0 = NULL,
  Bg0 = NULL,
  rini,
  r,
  rx,
  ry,
  jx,
  jy,
  p,
  d,
  n,
  maxiter = 100,
  conv = 1e-04,
  quietly = TRUE,
  method = c("RRR", "RRS")[1],
  lambda = 0
)
}
\arguments{
\item{Y}{Response matrix with n rows and jy*d columns.}

\item{X}{Design matrix with n rows and jx*p columns.}

\item{Ag0}{Initial estimator of U, if NULL then generate it by
function NestRRRini.}

\item{Bg0}{Initial estimator of V, if NULL then generate it by
function NestRRRini.}

\item{rini, r}{Rank of the local reduced-rank structure. \emph{rini} is used
in \code{NestRRRinit()} to get the initial estimator of U and V.}

\item{rx}{Number of latent predictors.}

\item{ry}{Number of latent responses.}

\item{jx}{Number of basis functions to expand x(s).}

\item{jy}{Number of basis functions to expand y(t).}

\item{p}{Number of predictors.}

\item{d}{Number of responses.}

\item{n}{Sample size.}

\item{maxiter}{Maximum iteration number, default 100.}

\item{conv}{Tolerance level to control convergence, default 1E-4.}

\item{quietly}{FALSE show the final fitting information (SSE, BIC, df), if TRUE (default) then not show.}

\item{method}{RRR (default) no ridge penalty; if RRS then use ridge penalty.}

\item{lambda}{Tuning parameter for the ridge penalty, only used when method='RRS', default=0.}
}
\value{
The returned items
  \item{Ag}{the global low-dimensional structure U, a d by ry matrix of rank ry.}
  \item{Bg}{the global low-dimensional structure V, a p by rx matrix of rank rx.}
  \item{Al}{the local low-dimensional structure A.}
  \item{Bl}{the local low-dimensional structure B.}
  \item{C}{the NRRR estimator of the coefficient matrix C.}
  \item{df}{a scalar, the estimated degrees of freedom of the NRRR model.}
  \item{sse}{a scalar, the objective function value.}
  \item{ic}{a vector contains values of BIC,BICP,AIC,GCV.}
  \item{obj}{ a vector contains all objective function (sse) values along iteration.}
  \item{iter}{a scalar, number of iterations to converge.}
}
\description{
This function uses the proposed blockwise coordinate descent algorithm
 to get the NRRR estimator with given rank (r, rx, ry).
}
\examples{
library(NRRR)
simDat <- nrrr.sim(
  n = 100, ns = 200, nt = 200, r = 5, rx = 3, ry = 3,
  jx = 15, jy = 15, p = 10, d = 6, s2n = 1, rho_X = 0.5,
  rho_E = 0, Sigma = CorrAR
)
fit_init <- with(simDat, NestRRR(
  Y = Yest, X = Xest, Ag0 = NULL, Bg0 = NULL,
  rini = 5, r = 5,
  rx = 3, ry = 3, jx = 15, jy = 15, p = 10, d = 6, n = 100
))
fit_init$Ag
}
\references{
Liu, X., Ma, S., & Chen, K. (2020).
Multivariate Functional Regression via Nested Reduced-Rank Regularization.
arXiv: Methodology.
}
